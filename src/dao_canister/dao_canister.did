type Dao = record {
  members : vec principal;
  dao_id : principal;
  proposals_count : nat32;
  linksandsocials : vec text;
  daotype : text;
  dao_name : text;
  proposal_ids : vec text;
  image_id : text;
  groups_count : nat64;
  members_permissions : vec text;
  link_of_document : text;
  members_count : nat32;
  followers : vec principal;
  followers_count : nat32;
  tokenissuer : text;
  group_name : vec text;
  cool_down_period : nat32;
  purpose : text;
  required_votes : nat32;
};
type DaoGroup = record {
  group_members : vec principal;
  group_name : text;
  group_permissions : vec text;
};
type DaoInput = record {
  members : vec principal;
  linksandsocials : vec text;
  daotype : text;
  dao_groups : vec DaoGroup;
  dao_name : text;
  image_id : text;
  members_permissions : vec text;
  link_of_document : text;
  followers : vec principal;
  tokenissuer : text;
  cool_down_period : nat32;
  purpose : text;
  required_votes : nat32;
};
type Pagination = record { end : nat32; start : nat32 };
type ProposalInput = record {
  proposal_expired_at : nat64;
  proposal_title : text;
  proposal_description : text;
  proposal_type : ProposalType;
  required_votes : nat32;
};
type ProposalState = variant {
  Open;
  Executing;
  Rejected;
  Succeeded;
  Accepted;
  Expired;
};
type ProposalType = variant {
  AddMemberProposal;
  VotingProposal;
  RemoveMemberPrposal;
};
type Proposals = record {
  share_count : nat64;
  proposal_expired_at : nat64;
  proposal_submitted_at : nat64;
  proposal_approved_votes : nat64;
  created_by : principal;
  proposal_rejected_votes : nat64;
  proposal_title : text;
  rejected_votes_list : vec principal;
  proposal_description : text;
  proposal_id : text;
  proposal_status : ProposalState;
  approved_votes_list : vec principal;
  comments : nat64;
  comments_list : vec text;
  proposal_type : ProposalType;
  required_votes : nat32;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : vec principal; Err : text };
type Result_2 = variant { Ok : vec Proposals; Err : text };
type UpdateDaoSettings = record {
  members : vec principal;
  linksandsocials : vec text;
  daotype : text;
  dao_name : text;
  link_of_document : text;
  followers : vec principal;
  purpose : text;
};
type VoteParam = variant { No; Yes };
service : (DaoInput) -> {
  add_member_to_group : (text, principal) -> (text);
  ask_to_join_dao : (text) -> (Result);
  change_proposal_state : (text, ProposalState) -> (Result);
  comment_on_proposal : (text, text) -> (Result);
  create_proposal : (text, ProposalInput) -> (text);
  follow_dao : () -> (Result);
  get_all_groups : () -> (vec DaoGroup);
  get_all_proposals : (Pagination) -> (vec Proposals) query;
  get_dao_detail : () -> (Dao) query;
  get_dao_followers : () -> (vec principal) query;
  get_dao_members : () -> (vec principal) query;
  get_members_of_group : (text) -> (Result_1) query;
  get_my_proposal : () -> (Result_2);
  get_proposal_by_id : (text) -> (Proposals) query;
  proposal_refresh : () -> (Result);
  remove_member_from_group : (text, principal) -> (text);
  search_proposal : (text) -> (vec Proposals) query;
  unfollow_dao : () -> (Result);
  update_dao_settings : (UpdateDaoSettings) -> (Result);
  vote : (text, VoteParam) -> (Result);
}
